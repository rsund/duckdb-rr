/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton interface for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     POWER_OF = 270,
     LAMBDA_ARROW = 271,
     DOUBLE_ARROW = 272,
     LESS_EQUALS = 273,
     GREATER_EQUALS = 274,
     NOT_EQUALS = 275,
     ABORT_P = 276,
     ABSOLUTE_P = 277,
     ACCESS = 278,
     ACTION = 279,
     ADD_P = 280,
     ADMIN = 281,
     AFTER = 282,
     AGGREGATE = 283,
     ALL = 284,
     ALSO = 285,
     ALTER = 286,
     ALWAYS = 287,
     ANALYSE = 288,
     ANALYZE = 289,
     AND = 290,
     ANY = 291,
     ARRAY = 292,
     AS = 293,
     ASC_P = 294,
     ASSERTION = 295,
     ASSIGNMENT = 296,
     ASYMMETRIC = 297,
     AT = 298,
     ATTACH = 299,
     ATTRIBUTE = 300,
     AUTHORIZATION = 301,
     BACKWARD = 302,
     BEFORE = 303,
     BEGIN_P = 304,
     BETWEEN = 305,
     BIGINT = 306,
     BINARY = 307,
     BIT = 308,
     BOOLEAN_P = 309,
     BOTH = 310,
     BY = 311,
     CACHE = 312,
     CALL_P = 313,
     CALLED = 314,
     CASCADE = 315,
     CASCADED = 316,
     CASE = 317,
     CAST = 318,
     CATALOG_P = 319,
     CHAIN = 320,
     CHAR_P = 321,
     CHARACTER = 322,
     CHARACTERISTICS = 323,
     CHECK_P = 324,
     CHECKPOINT = 325,
     CLASS = 326,
     CLOSE = 327,
     CLUSTER = 328,
     COALESCE = 329,
     COLLATE = 330,
     COLLATION = 331,
     COLUMN = 332,
     COLUMNS = 333,
     COMMENT = 334,
     COMMENTS = 335,
     COMMIT = 336,
     COMMITTED = 337,
     COMPRESSION = 338,
     CONCURRENTLY = 339,
     CONFIGURATION = 340,
     CONFLICT = 341,
     CONNECTION = 342,
     CONSTRAINT = 343,
     CONSTRAINTS = 344,
     CONTENT_P = 345,
     CONTINUE_P = 346,
     CONVERSION_P = 347,
     COPY = 348,
     COST = 349,
     CREATE_P = 350,
     CROSS = 351,
     CSV = 352,
     CUBE = 353,
     CURRENT_P = 354,
     CURRENT_CATALOG = 355,
     CURRENT_DATE = 356,
     CURRENT_ROLE = 357,
     CURRENT_SCHEMA = 358,
     CURRENT_TIME = 359,
     CURRENT_TIMESTAMP = 360,
     CURRENT_USER = 361,
     CURSOR = 362,
     CYCLE = 363,
     DATA_P = 364,
     DATABASE = 365,
     DAY_P = 366,
     DAYS_P = 367,
     DEALLOCATE = 368,
     DEC = 369,
     DECIMAL_P = 370,
     DECLARE = 371,
     DEFAULT = 372,
     DEFAULTS = 373,
     DEFERRABLE = 374,
     DEFERRED = 375,
     DEFINER = 376,
     DELETE_P = 377,
     DELIMITER = 378,
     DELIMITERS = 379,
     DEPENDS = 380,
     DESC_P = 381,
     DESCRIBE = 382,
     DETACH = 383,
     DICTIONARY = 384,
     DISABLE_P = 385,
     DISCARD = 386,
     DISTINCT = 387,
     DO = 388,
     DOCUMENT_P = 389,
     DOMAIN_P = 390,
     DOUBLE_P = 391,
     DROP = 392,
     EACH = 393,
     ELSE = 394,
     ENABLE_P = 395,
     ENCODING = 396,
     ENCRYPTED = 397,
     END_P = 398,
     ENUM_P = 399,
     ESCAPE = 400,
     EVENT = 401,
     EXCEPT = 402,
     EXCLUDE = 403,
     EXCLUDING = 404,
     EXCLUSIVE = 405,
     EXECUTE = 406,
     EXISTS = 407,
     EXPLAIN = 408,
     EXPORT_P = 409,
     EXPORT_STATE = 410,
     EXTENSION = 411,
     EXTERNAL = 412,
     EXTRACT = 413,
     FALSE_P = 414,
     FAMILY = 415,
     FETCH = 416,
     FILTER = 417,
     FIRST_P = 418,
     FLOAT_P = 419,
     FOLLOWING = 420,
     FOR = 421,
     FORCE = 422,
     FOREIGN = 423,
     FORWARD = 424,
     FREEZE = 425,
     FROM = 426,
     FULL = 427,
     FUNCTION = 428,
     FUNCTIONS = 429,
     GENERATED = 430,
     GLOB = 431,
     GLOBAL = 432,
     GRANT = 433,
     GRANTED = 434,
     GROUP_P = 435,
     GROUPING = 436,
     GROUPING_ID = 437,
     HANDLER = 438,
     HAVING = 439,
     HEADER_P = 440,
     HOLD = 441,
     HOUR_P = 442,
     HOURS_P = 443,
     IDENTITY_P = 444,
     IF_P = 445,
     IGNORE_P = 446,
     ILIKE = 447,
     IMMEDIATE = 448,
     IMMUTABLE = 449,
     IMPLICIT_P = 450,
     IMPORT_P = 451,
     IN_P = 452,
     INCLUDE_P = 453,
     INCLUDING = 454,
     INCREMENT = 455,
     INDEX = 456,
     INDEXES = 457,
     INHERIT = 458,
     INHERITS = 459,
     INITIALLY = 460,
     INLINE_P = 461,
     INNER_P = 462,
     INOUT = 463,
     INPUT_P = 464,
     INSENSITIVE = 465,
     INSERT = 466,
     INSTALL = 467,
     INSTEAD = 468,
     INT_P = 469,
     INTEGER = 470,
     INTERSECT = 471,
     INTERVAL = 472,
     INTO = 473,
     INVOKER = 474,
     IS = 475,
     ISNULL = 476,
     ISOLATION = 477,
     JOIN = 478,
     JSON = 479,
     KEY = 480,
     LABEL = 481,
     LANGUAGE = 482,
     LARGE_P = 483,
     LAST_P = 484,
     LATERAL_P = 485,
     LEADING = 486,
     LEAKPROOF = 487,
     LEFT = 488,
     LEVEL = 489,
     LIKE = 490,
     LIMIT = 491,
     LISTEN = 492,
     LOAD = 493,
     LOCAL = 494,
     LOCALTIME = 495,
     LOCALTIMESTAMP = 496,
     LOCATION = 497,
     LOCK_P = 498,
     LOCKED = 499,
     LOGGED = 500,
     MACRO = 501,
     MAP = 502,
     MAPPING = 503,
     MATCH = 504,
     MATERIALIZED = 505,
     MAXVALUE = 506,
     METHOD = 507,
     MICROSECOND_P = 508,
     MICROSECONDS_P = 509,
     MILLISECOND_P = 510,
     MILLISECONDS_P = 511,
     MINUTE_P = 512,
     MINUTES_P = 513,
     MINVALUE = 514,
     MODE = 515,
     MONTH_P = 516,
     MONTHS_P = 517,
     MOVE = 518,
     NAME_P = 519,
     NAMES = 520,
     NATIONAL = 521,
     NATURAL = 522,
     NCHAR = 523,
     NEW = 524,
     NEXT = 525,
     NO = 526,
     NONE = 527,
     NOT = 528,
     NOTHING = 529,
     NOTIFY = 530,
     NOTNULL = 531,
     NOWAIT = 532,
     NULL_P = 533,
     NULLIF = 534,
     NULLS_P = 535,
     NUMERIC = 536,
     OBJECT_P = 537,
     OF = 538,
     OFF = 539,
     OFFSET = 540,
     OIDS = 541,
     OLD = 542,
     ON = 543,
     ONLY = 544,
     OPERATOR = 545,
     OPTION = 546,
     OPTIONS = 547,
     OR = 548,
     ORDER = 549,
     ORDINALITY = 550,
     OUT_P = 551,
     OUTER_P = 552,
     OVER = 553,
     OVERLAPS = 554,
     OVERLAY = 555,
     OVERRIDING = 556,
     OWNED = 557,
     OWNER = 558,
     PARALLEL = 559,
     PARSER = 560,
     PARTIAL = 561,
     PARTITION = 562,
     PASSING = 563,
     PASSWORD = 564,
     PERCENT = 565,
     PIVOT = 566,
     PIVOT_LONGER = 567,
     PIVOT_WIDER = 568,
     PLACING = 569,
     PLANS = 570,
     POLICY = 571,
     POSITION = 572,
     POSITIONAL = 573,
     PRAGMA_P = 574,
     PRECEDING = 575,
     PRECISION = 576,
     PREPARE = 577,
     PREPARED = 578,
     PRESERVE = 579,
     PRIMARY = 580,
     PRIOR = 581,
     PRIVILEGES = 582,
     PROCEDURAL = 583,
     PROCEDURE = 584,
     PROGRAM = 585,
     PUBLICATION = 586,
     QUALIFY = 587,
     QUOTE = 588,
     RANGE = 589,
     READ_P = 590,
     REAL = 591,
     REASSIGN = 592,
     RECHECK = 593,
     RECURSIVE = 594,
     REF = 595,
     REFERENCES = 596,
     REFERENCING = 597,
     REFRESH = 598,
     REINDEX = 599,
     RELATIVE_P = 600,
     RELEASE = 601,
     RENAME = 602,
     REPEATABLE = 603,
     REPLACE = 604,
     REPLICA = 605,
     RESET = 606,
     RESPECT_P = 607,
     RESTART = 608,
     RESTRICT = 609,
     RETURNING = 610,
     RETURNS = 611,
     REVOKE = 612,
     RIGHT = 613,
     ROLE = 614,
     ROLLBACK = 615,
     ROLLUP = 616,
     ROW = 617,
     ROWS = 618,
     RULE = 619,
     SAMPLE = 620,
     SAVEPOINT = 621,
     SCHEMA = 622,
     SCHEMAS = 623,
     SCROLL = 624,
     SEARCH = 625,
     SECOND_P = 626,
     SECONDS_P = 627,
     SECURITY = 628,
     SELECT = 629,
     SEQUENCE = 630,
     SEQUENCES = 631,
     SERIALIZABLE = 632,
     SERVER = 633,
     SESSION = 634,
     SESSION_USER = 635,
     SET = 636,
     SETOF = 637,
     SETS = 638,
     SHARE = 639,
     SHOW = 640,
     SIMILAR = 641,
     SIMPLE = 642,
     SKIP = 643,
     SMALLINT = 644,
     SNAPSHOT = 645,
     SOME = 646,
     SQL_P = 647,
     STABLE = 648,
     STANDALONE_P = 649,
     START = 650,
     STATEMENT = 651,
     STATISTICS = 652,
     STDIN = 653,
     STDOUT = 654,
     STORAGE = 655,
     STORED = 656,
     STRICT_P = 657,
     STRIP_P = 658,
     STRUCT = 659,
     SUBSCRIPTION = 660,
     SUBSTRING = 661,
     SUMMARIZE = 662,
     SYMMETRIC = 663,
     SYSID = 664,
     SYSTEM_P = 665,
     TABLE = 666,
     TABLES = 667,
     TABLESAMPLE = 668,
     TABLESPACE = 669,
     TEMP = 670,
     TEMPLATE = 671,
     TEMPORARY = 672,
     TEXT_P = 673,
     THEN = 674,
     TIME = 675,
     TIMESTAMP = 676,
     TO = 677,
     TRAILING = 678,
     TRANSACTION = 679,
     TRANSFORM = 680,
     TREAT = 681,
     TRIGGER = 682,
     TRIM = 683,
     TRUE_P = 684,
     TRUNCATE = 685,
     TRUSTED = 686,
     TRY_CAST = 687,
     TYPE_P = 688,
     TYPES_P = 689,
     UNBOUNDED = 690,
     UNCOMMITTED = 691,
     UNENCRYPTED = 692,
     UNION = 693,
     UNIQUE = 694,
     UNKNOWN = 695,
     UNLISTEN = 696,
     UNLOGGED = 697,
     UNPIVOT = 698,
     UNTIL = 699,
     UPDATE = 700,
     USE_P = 701,
     USER = 702,
     USING = 703,
     VACUUM = 704,
     VALID = 705,
     VALIDATE = 706,
     VALIDATOR = 707,
     VALUE_P = 708,
     VALUES = 709,
     VARCHAR = 710,
     VARIADIC = 711,
     VARYING = 712,
     VERBOSE = 713,
     VERSION_P = 714,
     VIEW = 715,
     VIEWS = 716,
     VIRTUAL = 717,
     VOLATILE = 718,
     WHEN = 719,
     WHERE = 720,
     WHITESPACE_P = 721,
     WINDOW = 722,
     WITH = 723,
     WITHIN = 724,
     WITHOUT = 725,
     WORK = 726,
     WRAPPER = 727,
     WRITE_P = 728,
     XML_P = 729,
     XMLATTRIBUTES = 730,
     XMLCONCAT = 731,
     XMLELEMENT = 732,
     XMLEXISTS = 733,
     XMLFOREST = 734,
     XMLNAMESPACES = 735,
     XMLPARSE = 736,
     XMLPI = 737,
     XMLROOT = 738,
     XMLSERIALIZE = 739,
     XMLTABLE = 740,
     YEAR_P = 741,
     YEARS_P = 742,
     YES_P = 743,
     ZONE = 744,
     NOT_LA = 745,
     NULLS_LA = 746,
     WITH_LA = 747,
     POSTFIXOP = 748,
     UMINUS = 749
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define POWER_OF 270
#define LAMBDA_ARROW 271
#define DOUBLE_ARROW 272
#define LESS_EQUALS 273
#define GREATER_EQUALS 274
#define NOT_EQUALS 275
#define ABORT_P 276
#define ABSOLUTE_P 277
#define ACCESS 278
#define ACTION 279
#define ADD_P 280
#define ADMIN 281
#define AFTER 282
#define AGGREGATE 283
#define ALL 284
#define ALSO 285
#define ALTER 286
#define ALWAYS 287
#define ANALYSE 288
#define ANALYZE 289
#define AND 290
#define ANY 291
#define ARRAY 292
#define AS 293
#define ASC_P 294
#define ASSERTION 295
#define ASSIGNMENT 296
#define ASYMMETRIC 297
#define AT 298
#define ATTACH 299
#define ATTRIBUTE 300
#define AUTHORIZATION 301
#define BACKWARD 302
#define BEFORE 303
#define BEGIN_P 304
#define BETWEEN 305
#define BIGINT 306
#define BINARY 307
#define BIT 308
#define BOOLEAN_P 309
#define BOTH 310
#define BY 311
#define CACHE 312
#define CALL_P 313
#define CALLED 314
#define CASCADE 315
#define CASCADED 316
#define CASE 317
#define CAST 318
#define CATALOG_P 319
#define CHAIN 320
#define CHAR_P 321
#define CHARACTER 322
#define CHARACTERISTICS 323
#define CHECK_P 324
#define CHECKPOINT 325
#define CLASS 326
#define CLOSE 327
#define CLUSTER 328
#define COALESCE 329
#define COLLATE 330
#define COLLATION 331
#define COLUMN 332
#define COLUMNS 333
#define COMMENT 334
#define COMMENTS 335
#define COMMIT 336
#define COMMITTED 337
#define COMPRESSION 338
#define CONCURRENTLY 339
#define CONFIGURATION 340
#define CONFLICT 341
#define CONNECTION 342
#define CONSTRAINT 343
#define CONSTRAINTS 344
#define CONTENT_P 345
#define CONTINUE_P 346
#define CONVERSION_P 347
#define COPY 348
#define COST 349
#define CREATE_P 350
#define CROSS 351
#define CSV 352
#define CUBE 353
#define CURRENT_P 354
#define CURRENT_CATALOG 355
#define CURRENT_DATE 356
#define CURRENT_ROLE 357
#define CURRENT_SCHEMA 358
#define CURRENT_TIME 359
#define CURRENT_TIMESTAMP 360
#define CURRENT_USER 361
#define CURSOR 362
#define CYCLE 363
#define DATA_P 364
#define DATABASE 365
#define DAY_P 366
#define DAYS_P 367
#define DEALLOCATE 368
#define DEC 369
#define DECIMAL_P 370
#define DECLARE 371
#define DEFAULT 372
#define DEFAULTS 373
#define DEFERRABLE 374
#define DEFERRED 375
#define DEFINER 376
#define DELETE_P 377
#define DELIMITER 378
#define DELIMITERS 379
#define DEPENDS 380
#define DESC_P 381
#define DESCRIBE 382
#define DETACH 383
#define DICTIONARY 384
#define DISABLE_P 385
#define DISCARD 386
#define DISTINCT 387
#define DO 388
#define DOCUMENT_P 389
#define DOMAIN_P 390
#define DOUBLE_P 391
#define DROP 392
#define EACH 393
#define ELSE 394
#define ENABLE_P 395
#define ENCODING 396
#define ENCRYPTED 397
#define END_P 398
#define ENUM_P 399
#define ESCAPE 400
#define EVENT 401
#define EXCEPT 402
#define EXCLUDE 403
#define EXCLUDING 404
#define EXCLUSIVE 405
#define EXECUTE 406
#define EXISTS 407
#define EXPLAIN 408
#define EXPORT_P 409
#define EXPORT_STATE 410
#define EXTENSION 411
#define EXTERNAL 412
#define EXTRACT 413
#define FALSE_P 414
#define FAMILY 415
#define FETCH 416
#define FILTER 417
#define FIRST_P 418
#define FLOAT_P 419
#define FOLLOWING 420
#define FOR 421
#define FORCE 422
#define FOREIGN 423
#define FORWARD 424
#define FREEZE 425
#define FROM 426
#define FULL 427
#define FUNCTION 428
#define FUNCTIONS 429
#define GENERATED 430
#define GLOB 431
#define GLOBAL 432
#define GRANT 433
#define GRANTED 434
#define GROUP_P 435
#define GROUPING 436
#define GROUPING_ID 437
#define HANDLER 438
#define HAVING 439
#define HEADER_P 440
#define HOLD 441
#define HOUR_P 442
#define HOURS_P 443
#define IDENTITY_P 444
#define IF_P 445
#define IGNORE_P 446
#define ILIKE 447
#define IMMEDIATE 448
#define IMMUTABLE 449
#define IMPLICIT_P 450
#define IMPORT_P 451
#define IN_P 452
#define INCLUDE_P 453
#define INCLUDING 454
#define INCREMENT 455
#define INDEX 456
#define INDEXES 457
#define INHERIT 458
#define INHERITS 459
#define INITIALLY 460
#define INLINE_P 461
#define INNER_P 462
#define INOUT 463
#define INPUT_P 464
#define INSENSITIVE 465
#define INSERT 466
#define INSTALL 467
#define INSTEAD 468
#define INT_P 469
#define INTEGER 470
#define INTERSECT 471
#define INTERVAL 472
#define INTO 473
#define INVOKER 474
#define IS 475
#define ISNULL 476
#define ISOLATION 477
#define JOIN 478
#define JSON 479
#define KEY 480
#define LABEL 481
#define LANGUAGE 482
#define LARGE_P 483
#define LAST_P 484
#define LATERAL_P 485
#define LEADING 486
#define LEAKPROOF 487
#define LEFT 488
#define LEVEL 489
#define LIKE 490
#define LIMIT 491
#define LISTEN 492
#define LOAD 493
#define LOCAL 494
#define LOCALTIME 495
#define LOCALTIMESTAMP 496
#define LOCATION 497
#define LOCK_P 498
#define LOCKED 499
#define LOGGED 500
#define MACRO 501
#define MAP 502
#define MAPPING 503
#define MATCH 504
#define MATERIALIZED 505
#define MAXVALUE 506
#define METHOD 507
#define MICROSECOND_P 508
#define MICROSECONDS_P 509
#define MILLISECOND_P 510
#define MILLISECONDS_P 511
#define MINUTE_P 512
#define MINUTES_P 513
#define MINVALUE 514
#define MODE 515
#define MONTH_P 516
#define MONTHS_P 517
#define MOVE 518
#define NAME_P 519
#define NAMES 520
#define NATIONAL 521
#define NATURAL 522
#define NCHAR 523
#define NEW 524
#define NEXT 525
#define NO 526
#define NONE 527
#define NOT 528
#define NOTHING 529
#define NOTIFY 530
#define NOTNULL 531
#define NOWAIT 532
#define NULL_P 533
#define NULLIF 534
#define NULLS_P 535
#define NUMERIC 536
#define OBJECT_P 537
#define OF 538
#define OFF 539
#define OFFSET 540
#define OIDS 541
#define OLD 542
#define ON 543
#define ONLY 544
#define OPERATOR 545
#define OPTION 546
#define OPTIONS 547
#define OR 548
#define ORDER 549
#define ORDINALITY 550
#define OUT_P 551
#define OUTER_P 552
#define OVER 553
#define OVERLAPS 554
#define OVERLAY 555
#define OVERRIDING 556
#define OWNED 557
#define OWNER 558
#define PARALLEL 559
#define PARSER 560
#define PARTIAL 561
#define PARTITION 562
#define PASSING 563
#define PASSWORD 564
#define PERCENT 565
#define PIVOT 566
#define PIVOT_LONGER 567
#define PIVOT_WIDER 568
#define PLACING 569
#define PLANS 570
#define POLICY 571
#define POSITION 572
#define POSITIONAL 573
#define PRAGMA_P 574
#define PRECEDING 575
#define PRECISION 576
#define PREPARE 577
#define PREPARED 578
#define PRESERVE 579
#define PRIMARY 580
#define PRIOR 581
#define PRIVILEGES 582
#define PROCEDURAL 583
#define PROCEDURE 584
#define PROGRAM 585
#define PUBLICATION 586
#define QUALIFY 587
#define QUOTE 588
#define RANGE 589
#define READ_P 590
#define REAL 591
#define REASSIGN 592
#define RECHECK 593
#define RECURSIVE 594
#define REF 595
#define REFERENCES 596
#define REFERENCING 597
#define REFRESH 598
#define REINDEX 599
#define RELATIVE_P 600
#define RELEASE 601
#define RENAME 602
#define REPEATABLE 603
#define REPLACE 604
#define REPLICA 605
#define RESET 606
#define RESPECT_P 607
#define RESTART 608
#define RESTRICT 609
#define RETURNING 610
#define RETURNS 611
#define REVOKE 612
#define RIGHT 613
#define ROLE 614
#define ROLLBACK 615
#define ROLLUP 616
#define ROW 617
#define ROWS 618
#define RULE 619
#define SAMPLE 620
#define SAVEPOINT 621
#define SCHEMA 622
#define SCHEMAS 623
#define SCROLL 624
#define SEARCH 625
#define SECOND_P 626
#define SECONDS_P 627
#define SECURITY 628
#define SELECT 629
#define SEQUENCE 630
#define SEQUENCES 631
#define SERIALIZABLE 632
#define SERVER 633
#define SESSION 634
#define SESSION_USER 635
#define SET 636
#define SETOF 637
#define SETS 638
#define SHARE 639
#define SHOW 640
#define SIMILAR 641
#define SIMPLE 642
#define SKIP 643
#define SMALLINT 644
#define SNAPSHOT 645
#define SOME 646
#define SQL_P 647
#define STABLE 648
#define STANDALONE_P 649
#define START 650
#define STATEMENT 651
#define STATISTICS 652
#define STDIN 653
#define STDOUT 654
#define STORAGE 655
#define STORED 656
#define STRICT_P 657
#define STRIP_P 658
#define STRUCT 659
#define SUBSCRIPTION 660
#define SUBSTRING 661
#define SUMMARIZE 662
#define SYMMETRIC 663
#define SYSID 664
#define SYSTEM_P 665
#define TABLE 666
#define TABLES 667
#define TABLESAMPLE 668
#define TABLESPACE 669
#define TEMP 670
#define TEMPLATE 671
#define TEMPORARY 672
#define TEXT_P 673
#define THEN 674
#define TIME 675
#define TIMESTAMP 676
#define TO 677
#define TRAILING 678
#define TRANSACTION 679
#define TRANSFORM 680
#define TREAT 681
#define TRIGGER 682
#define TRIM 683
#define TRUE_P 684
#define TRUNCATE 685
#define TRUSTED 686
#define TRY_CAST 687
#define TYPE_P 688
#define TYPES_P 689
#define UNBOUNDED 690
#define UNCOMMITTED 691
#define UNENCRYPTED 692
#define UNION 693
#define UNIQUE 694
#define UNKNOWN 695
#define UNLISTEN 696
#define UNLOGGED 697
#define UNPIVOT 698
#define UNTIL 699
#define UPDATE 700
#define USE_P 701
#define USER 702
#define USING 703
#define VACUUM 704
#define VALID 705
#define VALIDATE 706
#define VALIDATOR 707
#define VALUE_P 708
#define VALUES 709
#define VARCHAR 710
#define VARIADIC 711
#define VARYING 712
#define VERBOSE 713
#define VERSION_P 714
#define VIEW 715
#define VIEWS 716
#define VIRTUAL 717
#define VOLATILE 718
#define WHEN 719
#define WHERE 720
#define WHITESPACE_P 721
#define WINDOW 722
#define WITH 723
#define WITHIN 724
#define WITHOUT 725
#define WORK 726
#define WRAPPER 727
#define WRITE_P 728
#define XML_P 729
#define XMLATTRIBUTES 730
#define XMLCONCAT 731
#define XMLELEMENT 732
#define XMLEXISTS 733
#define XMLFOREST 734
#define XMLNAMESPACES 735
#define XMLPARSE 736
#define XMLPI 737
#define XMLROOT 738
#define XMLSERIALIZE 739
#define XMLTABLE 740
#define YEAR_P 741
#define YEARS_P 742
#define YES_P 743
#define ZONE 744
#define NOT_LA 745
#define NULLS_LA 746
#define WITH_LA 747
#define POSTFIXOP 748
#define UMINUS 749




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGOnConflictActionAlias onconflictshorthand;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGConstrType           constr;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 1529 of yacc.c.  */
#line 1083 "third_party/libpg_query/grammar/grammar_out.hpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


